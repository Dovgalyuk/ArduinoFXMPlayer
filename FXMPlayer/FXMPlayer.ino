#pragma GCC optimize ("-O3")
#include <util/delay.h>
#include "ym2149.h"
/*
// Tetris0
#define ROM_ADDR (34090 - 10)
const uint8_t rom[] PROGMEM = {
  0xcd, (ROM_ADDR + 10), (ROM_ADDR + 10) >> 8,
  0x76,
  0xcd, ROM_ADDR + 16, (ROM_ADDR + 16) >> 8,
  0xc3, ROM_ADDR + 3, (ROM_ADDR + 3) >> 8,

0xc3, 0x33, 0x85, 0xc3, 0x88, 0x85, 0xc3, 0xf3, 0x86, 0xf3, 0x2a, 0xe4, 0x89, 0x22, 0x0f, 0x86, 
0x2a, 0xe6, 0x89, 0x22, 0x23, 0x86, 0x2a, 0xe8, 0x89, 0x22, 0x37, 0x86, 0x3e, 0x01, 0x32, 0x11, 
0x86, 0x32, 0x25, 0x86, 0x32, 0x39, 0x86, 0x3e, 0x08, 0x32, 0x12, 0x86, 0x32, 0x26, 0x86, 0x32, 
0x3a, 0x86, 0x21, 0xcf, 0x85, 0x11, 0x20, 0x00, 0x22, 0xa9, 0x85, 0x19, 0x22, 0xab, 0x85, 0x19, 
0x22, 0xad, 0x85, 0x21, 0x00, 0x00, 0x22, 0x1d, 0x86, 0x22, 0x31, 0x86, 0x22, 0x45, 0x86, 0x22, 
0x1f, 0x86, 0x22, 0x33, 0x86, 0x22, 0x47, 0x86, 0xaf, 0x32, 0xa3, 0x85, 0xfb, 0xc9, 0xf3, 0x3e, 
0xff, 0x16, 0x07, 0xcd, 0x4a, 0x87, 0xcd, 0x34, 0x87, 0xfb, 0xc9, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0xbf, 0x0f, 0xdc, 0x0e, 0x07, 0x0e, 0x3d, 0x0d, 0x7f, 0x0c, 0xcc, 0x0b, 0x22, 0x0b, 0x82, 
0x0a, 0xeb, 0x09, 0x5d, 0x09, 0xd6, 0x08, 0x57, 0x08, 0xdf, 0x07, 0x6e, 0x07, 0x03, 0x07, 0x9f, 
0x06, 0x40, 0x06, 0xe6, 0x05, 0x91, 0x05, 0x41, 0x05, 0xf6, 0x04, 0xae, 0x04, 0x6b, 0x04, 0x2c, 
0x04, 0xf0, 0x03, 0xb7, 0x03, 0x82, 0x03, 0x4f, 0x03, 0x20, 0x03, 0xf3, 0x02, 0xc8, 0x02, 0xa1, 
0x02, 0x7b, 0x02, 0x57, 0x02, 0x36, 0x02, 0x16, 0x02, 0xf8, 0x01, 0xdc, 0x01, 0xc1, 0x01, 0xa8, 
0x01, 0x90, 0x01, 0x79, 0x01, 0x64, 0x01, 0x50, 0x01, 0x3d, 0x01, 0x2c, 0x01, 0x1b, 0x01, 0x0b, 
0x01, 0xfc, 0x00, 0xee, 0x00, 0xe0, 0x00, 0xd4, 0x00, 0xc8, 0x00, 0xbd, 0x00, 0xb2, 0x00, 0xa8, 
0x00, 0x9f, 0x00, 0x96, 0x00, 0x8d, 0x00, 0x85, 0x00, 0x7e, 0x00, 0x77, 0x00, 0x70, 0x00, 0x6a, 
0x00, 0x64, 0x00, 0x5e, 0x00, 0x59, 0x00, 0x54, 0x00, 0x4f, 0x00, 0x4b, 0x00, 0x47, 0x00, 0x43, 
0x00, 0x3f, 0x00, 0x3b, 0x00, 0x38, 0x00, 0x35, 0x00, 0x32, 0x00, 0x2f, 0x00, 0x2d, 0x00, 0x2a, 
0x00, 0x28, 0x00, 0x25, 0x00, 0x23, 0x00, 0x21, 0x00, 0xdd, 0x21, 0x0f, 0x86, 0x2a, 0xa9, 0x85, 
0x3e, 0x01, 0xcd, 0x5f, 0x87, 0x22, 0xa9, 0x85, 0xdd, 0x21, 0x23, 0x86, 0x2a, 0xab, 0x85, 0x3e, 
0x02, 0xcd, 0x5f, 0x87, 0x22, 0xab, 0x85, 0xdd, 0x21, 0x37, 0x86, 0x2a, 0xad, 0x85, 0x3e, 0x03, 
0xcd, 0x5f, 0x87, 0x22, 0xad, 0x85, 0x3a, 0x3a, 0x86, 0x07, 0x47, 0x3a, 0x26, 0x86, 0xb0, 0x07, 
0x47, 0x3a, 0x12, 0x86, 0xb0, 0x16, 0x07, 0xcd, 0x4a, 0x87, 0x16, 0x0d, 0x21, 0xa2, 0x85, 0x7a, 
0x01, 0xfd, 0xff, 0xed, 0x79, 0x7e, 0x06, 0xbf, 0xed, 0x79, 0x2b, 0x15, 0xf2, 0x39, 0x87, 0xc9, 
0x01, 0x95, 0x85, 0x6a, 0x26, 0x00, 0x09, 0x77, 0xc9, 0xed, 0x73, 0xa7, 0x85, 0x2a, 0xa7, 0x85, 
0xed, 0x7b, 0xa5, 0x85, 0xc9, 0xed, 0x73, 0xa5, 0x85, 0xf9, 0x32, 0xa4, 0x85, 0xdd, 0x35, 0x02, 
0xca, 0x6e, 0x88, 0xdd, 0x35, 0x06, 0x20, 0x36, 0xdd, 0x6e, 0x04, 0xdd, 0x66, 0x05, 0x7e, 0xfe, 
0x80, 0x20, 0x0c, 0x23, 0x5e, 0x23, 0x56, 0xdd, 0x73, 0x04, 0xdd, 0x72, 0x05, 0x18, 0xe9, 0xfe, 
0x1e, 0x38, 0x0c, 0xd6, 0x32, 0xdd, 0x77, 0x09, 0xdd, 0x36, 0x06, 0x01, 0x23, 0x18, 0x09, 0xdd, 
0x77, 0x09, 0x23, 0x7e, 0xdd, 0x77, 0x06, 0x23, 0xdd, 0x75, 0x04, 0xdd, 0x74, 0x05, 0xdd, 0x7e, 
0x07, 0xdd, 0xb6, 0x08, 0xca, 0x31, 0x88, 0xdd, 0xcb, 0x0e, 0x56, 0xc2, 0x31, 0x88, 0xdd, 0x6e, 
0x0c, 0xdd, 0x66, 0x0d, 0x7e, 0x23, 0xdd, 0x75, 0x0c, 0xdd, 0x74, 0x0d, 0xfe, 0x80, 0x20, 0x06, 
0x7e, 0x23, 0x66, 0x6f, 0x18, 0xee, 0xfe, 0x82, 0xc2, 0xdc, 0x87, 0xdd, 0xcb, 0x0e, 0xde, 0xc3, 
0xbe, 0x87, 0xfe, 0x83, 0xc2, 0xe8, 0x87, 0xdd, 0xcb, 0x0e, 0x9e, 0xc3, 0xbe, 0x87, 0xfe, 0x84, 
0xc2, 0xf8, 0x87, 0x3e, 0x09, 0xdd, 0xae, 0x03, 0xdd, 0x77, 0x03, 0xc3, 0xbe, 0x87, 0xdd, 0xcb, 
0x0e, 0x5e, 0xca, 0x1a, 0x88, 0xdd, 0x86, 0x12, 0xdd, 0x77, 0x12, 0x3d, 0x87, 0x5f, 0x16, 0x00, 
0x21, 0x4b, 0x86, 0x19, 0x7e, 0xdd, 0x77, 0x07, 0x23, 0x7e, 0xdd, 0x77, 0x08, 0xc3, 0x31, 0x88, 
0x5f, 0x16, 0x00, 0xdd, 0x6e, 0x07, 0xdd, 0x66, 0x08, 0xe6, 0x80, 0xca, 0x2a, 0x88, 0x16, 0xff, 
0x19, 0xdd, 0x75, 0x07, 0xdd, 0x74, 0x08, 0x3a, 0xa3, 0x85, 0x16, 0x06, 0xcd, 0x4a, 0x87, 0xdd, 
0xcb, 0x0e, 0x96, 0x3a, 0xa4, 0x85, 0xc6, 0x07, 0x57, 0xdd, 0x7e, 0x07, 0xdd, 0xb6, 0x08, 0x28, 
0x03, 0xdd, 0x7e, 0x09, 0xcd, 0x4a, 0x87, 0x3a, 0xa4, 0x85, 0x3d, 0x87, 0x57, 0xdd, 0x7e, 0x07, 
0xcd, 0x4a, 0x87, 0x14, 0xdd, 0x7e, 0x08, 0xcd, 0x4a, 0x87, 0xc3, 0x53, 0x87, 0xdd, 0x75, 0x00, 
0xdd, 0x74, 0x01, 0xc9, 0xdd, 0x6e, 0x00, 0xdd, 0x66, 0x01, 0x7e, 0x23, 0xcd, 0x67, 0x88, 0xcb, 
0x7f, 0xc2, 0xeb, 0x88, 0x22, 0xa7, 0x85, 0xb7, 0x28, 0x1b, 0xdd, 0x86, 0x0f, 0xdd, 0x77, 0x12, 
0xdd, 0xcb, 0x0e, 0x9e, 0x3d, 0x87, 0x5f, 0x16, 0x00, 0x21, 0x4b, 0x86, 0x19, 0x5e, 0x23, 0x56, 
0x2a, 0xa7, 0x85, 0x18, 0x03, 0x11, 0x00, 0x00, 0x7e, 0x23, 0xcd, 0x67, 0x88, 0xdd, 0x77, 0x02, 
0xdd, 0x73, 0x07, 0xdd, 0x72, 0x08, 0xdd, 0x7e, 0x10, 0xdd, 0x77, 0x0c, 0xdd, 0x7e, 0x11, 0xdd, 
0x77, 0x0d, 0xdd, 0xcb, 0x0e, 0xd6, 0xdd, 0xcb, 0x0e, 0x4e, 0xc2, 0x6d, 0x87, 0xdd, 0xcb, 0x0e, 
0x46, 0xca, 0xd2, 0x88, 0xdd, 0xcb, 0x0e, 0xce, 0xdd, 0x4e, 0x0a, 0xdd, 0x46, 0x0b, 0x0a, 0xdd, 
0x77, 0x09, 0x03, 0x0a, 0x03, 0xdd, 0x77, 0x06, 0xdd, 0x71, 0x04, 0xdd, 0x70, 0x05, 0xc3, 0x31, 
0x88, 0xe6, 0x7f, 0x22, 0xa7, 0x85, 0x87, 0x5f, 0x16, 0x00, 0x21, 0x01, 0x89, 0x19, 0x7e, 0x23, 
0x66, 0x6f, 0xe5, 0x2a, 0xa7, 0x85, 0xc9, 0x1f, 0x89, 0x2b, 0x89, 0x39, 0x89, 0x43, 0x89, 0x55, 
0x89, 0x60, 0x89, 0x8d, 0x89, 0x6b, 0x89, 0x7b, 0x89, 0x86, 0x89, 0x9d, 0x89, 0xab, 0x89, 0xb9, 
0x89, 0xc6, 0x89, 0xd6, 0x89, 0x7e, 0xdd, 0x77, 0x00, 0x23, 0x7e, 0xdd, 0x77, 0x01, 0xc3, 0x6e, 
0x88, 0x7e, 0xdd, 0x77, 0x00, 0x23, 0x7e, 0xdd, 0x77, 0x01, 0x23, 0xe5, 0xc3, 0x6e, 0x88, 0x46, 
0xc5, 0x23, 0xe5, 0xcd, 0x67, 0x88, 0xc3, 0x6e, 0x88, 0xd1, 0xc1, 0x10, 0x03, 0xc3, 0x6e, 0x88, 
0xc5, 0xd5, 0xdd, 0x73, 0x00, 0xdd, 0x72, 0x01, 0xc3, 0x6e, 0x88, 0x7e, 0x23, 0x32, 0xa3, 0x85, 
0xcd, 0x67, 0x88, 0xc3, 0x6e, 0x88, 0x7e, 0x23, 0xcd, 0x67, 0x88, 0xdd, 0x77, 0x03, 0xc3, 0x6e, 
0x88, 0x7e, 0xdd, 0x77, 0x0a, 0x23, 0x7e, 0xdd, 0x77, 0x0b, 0x23, 0xcd, 0x67, 0x88, 0xc3, 0x6e, 
0x88, 0x7e, 0x23, 0xcd, 0x67, 0x88, 0xdd, 0x77, 0x0f, 0xc3, 0x6e, 0x88, 0xe1, 0xcd, 0x67, 0x88, 
0xc3, 0x6e, 0x88, 0x7e, 0xdd, 0x77, 0x10, 0x23, 0x7e, 0xdd, 0x77, 0x11, 0x23, 0xcd, 0x67, 0x88, 
0xc3, 0x6e, 0x88, 0xdd, 0xcb, 0x0e, 0xc6, 0xdd, 0xcb, 0x0e, 0x8e, 0xcd, 0x67, 0x88, 0xc3, 0x6e, 
0x88, 0xdd, 0xcb, 0x0e, 0x86, 0xdd, 0xcb, 0x0e, 0x8e, 0xcd, 0x67, 0x88, 0xc3, 0x6e, 0x88, 0x5e, 
0x23, 0x56, 0x23, 0xcd, 0x67, 0x88, 0x01, 0x6e, 0x88, 0xc5, 0xd5, 0xc9, 0x3a, 0xa3, 0x85, 0x86, 
0xe6, 0x1f, 0x32, 0xa3, 0x85, 0x23, 0xcd, 0x67, 0x88, 0xc3, 0x6e, 0x88, 0x7e, 0xdd, 0x86, 0x0f, 
0xdd, 0x77, 0x0f, 0x23, 0xcd, 0x67, 0x88, 0xc3, 0x6e, 0x88, 0xea, 0x89, 0xea, 0x8a, 0x6a, 0x8b, 
0x86, 0x21, 0x8a, 0x87, 0x17, 0x8a, 0x28, 0xa0, 0x28, 0x28, 0x2a, 0x28, 0x28, 0x50, 0x29, 0xa0, 
0x29, 0x28, 0x2b, 0x28, 0x29, 0x50, 0x25, 0x50, 0x27, 0x50, 0x23, 0x28, 0x25, 0x28, 0x27, 0x50, 
0x24, 0x50, 0x26, 0x50, 0x29, 0x28, 0x2b, 0x28, 0x26, 0x50, 0x80, 0xea, 0x89, 0x0f, 0x08, 0x0e, 
0x09, 0x0d, 0x09, 0x0c, 0x09, 0x0b, 0x00, 0x82, 0x00, 0x04, 0x00, 0x03, 0x00, 0x05, 0x00, 0x04, 
0x00, 0xf0, 0x80, 0x21, 0x8a, 0x87, 0x47, 0x8a, 0x85, 0x01, 0x8a, 0x82, 0x0a, 0x84, 0x1f, 0x07, 
0x01, 0x84, 0x0a, 0x07, 0x01, 0x83, 0x8b, 0x85, 0x08, 0x87, 0xdc, 0x8a, 0x89, 0x0f, 0x04, 0x0e, 
0x02, 0x0d, 0x02, 0x3e, 0x3d, 0x0a, 0x00, 0x82, 0x02, 0x81, 0x2f, 0x8a, 0x8e, 0x01, 0x29, 0x13, 
0x29, 0x14, 0x2b, 0x14, 0x24, 0x3c, 0x2b, 0x05, 0x29, 0x05, 0x28, 0x05, 0x29, 0x05, 0x2b, 0x14, 
0x2d, 0x05, 0x2b, 0x05, 0x29, 0x05, 0x2b, 0x05, 0x2d, 0x14, 0x2f, 0x05, 0x2d, 0x05, 0x2b, 0x05, 
0x2d, 0x05, 0x2f, 0x14, 0x30, 0x3d, 0x83, 0x81, 0x2f, 0x8a, 0x2c, 0x13, 0x2c, 0x14, 0x2b, 0x0a, 
0x2c, 0x0a, 0x2e, 0x14, 0x2c, 0x14, 0x2c, 0x14, 0x2b, 0x05, 0x29, 0x05, 0x2b, 0x05, 0x27, 0x05, 
0x2a, 0x14, 0x29, 0x14, 0x29, 0x14, 0x29, 0x05, 0x27, 0x05, 0x29, 0x05, 0x25, 0x04, 0x00, 0x01, 
0x25, 0x14, 0x27, 0x3d, 0x81, 0x2f, 0x8a, 0x2b, 0x13, 0x2b, 0x14, 0x2a, 0x0a, 0x2b, 0x0a, 0x32, 
0x14, 0x2d, 0x14, 0x2b, 0x14, 0x2a, 0x05, 0x28, 0x05, 0x2a, 0x05, 0x26, 0x05, 0x30, 0x14, 0x2f, 
0x14, 0x2f, 0x14, 0x2f, 0x05, 0x2d, 0x05, 0x2f, 0x05, 0x2b, 0x04, 0x00, 0x01, 0x2b, 0x14, 0x2d, 
0x3d, 0x89, 0x00, 0x01, 0x0f, 0x02, 0x0e, 0x00, 0x82, 0x00, 0x0c, 0x00, 0xf4, 0x80, 0xe2, 0x8a, 
0x87, 0x51, 0x8b, 0x86, 0x59, 0x8b, 0x88, 0x00, 0x82, 0x08, 0x81, 0x38, 0x8b, 0x83, 0x88, 0x01, 
0x82, 0x08, 0x81, 0x38, 0x8b, 0x83, 0x88, 0xfd, 0x81, 0x35, 0x8b, 0x88, 0xff, 0x81, 0x35, 0x8b, 
0x88, 0xfb, 0x81, 0x38, 0x8b, 0x88, 0xfd, 0x81, 0x38, 0x8b, 0x88, 0xff, 0x81, 0x35, 0x8b, 0x88, 
0xfc, 0x81, 0x35, 0x8b, 0x88, 0xfe, 0x81, 0x35, 0x8b, 0x88, 0x01, 0x81, 0x38, 0x8b, 0x88, 0x03, 
0x81, 0x38, 0x8b, 0x88, 0xfe, 0x81, 0x35, 0x8b, 0x80, 0xea, 0x8a, 0x81, 0x38, 0x8b, 0x8e, 0xf4, 
0x34, 0x04, 0x38, 0x04, 0x3b, 0x04, 0x40, 0x04, 0x44, 0x04, 0x47, 0x04, 0x44, 0x04, 0x40, 0x04, 
0x3b, 0x04, 0x38, 0x04, 0x8e, 0x0c, 0x89, 0x0e, 0x01, 0x3f, 0x3e, 0x3d, 0x80, 0x51, 0x8b, 0x00, 
0x80, 0x59, 0x8b, 0xff, 0xff, 0xff, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0x5d, 0x8b, 
0x88, 0x16, 0x86, 0x5d, 0x8b, 0x81, 0x51, 0x8a, 0x88, 0x0a, 0x86, 0xe2, 0x8a, 0x81, 0x51, 0x8a, 
0x80, 0x6a, 0x8b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x89, 
};
*/
  /*
// Tetris1
#define ROM_ADDR (50455 - 10)
const uint8_t rom[] PROGMEM = {
  0xcd, 0x17, 0xc5, // C50D
  0x76,             // C510
  0xcd, 0x1d, 0xc5, // C511
  0xc3, 0x10, 0xc5, // C514
  // 0xc517
0xc3, 0x20, 0xc5, 0xc3, 0x75, 0xc5, 0xc3, 0xe0, 0xc6, 0xf3, 0x2a, 0xd1, 0xc9, 0x22, 0xfc, 0xc5, 
0x2a, 0xd3, 0xc9, 0x22, 0x10, 0xc6, 0x2a, 0xd5, 0xc9, 0x22, 0x24, 0xc6, 0x3e, 0x01, 0x32, 0xfe, 
0xc5, 0x32, 0x12, 0xc6, 0x32, 0x26, 0xc6, 0x3e, 0x08, 0x32, 0xff, 0xc5, 0x32, 0x13, 0xc6, 0x32, 
0x27, 0xc6, 0x21, 0xbc, 0xc5, 0x11, 0x20, 0x00, 0x22, 0x96, 0xc5, 0x19, 0x22, 0x98, 0xc5, 0x19, 
0x22, 0x9a, 0xc5, 0x21, 0x00, 0x00, 0x22, 0x0a, 0xc6, 0x22, 0x1e, 0xc6, 0x22, 0x32, 0xc6, 0x22, 
0x0c, 0xc6, 0x22, 0x20, 0xc6, 0x22, 0x34, 0xc6, 0xaf, 0x32, 0x90, 0xc5, 0xfb, 0xc9, 0xf3, 0x3e, 
0xff, 0x16, 0x07, 0xcd, 0x37, 0xc7, 0xcd, 0x21, 0xc7, 0xfb, 0xc9, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0xbf, 0x0f, 0xdc, 0x0e, 0x07, 0x0e, 0x3d, 0x0d, 0x7f, 0x0c, 0xcc, 0x0b, 0x22, 0x0b, 0x82, 
0x0a, 0xeb, 0x09, 0x5d, 0x09, 0xd6, 0x08, 0x57, 0x08, 0xdf, 0x07, 0x6e, 0x07, 0x03, 0x07, 0x9f, 
0x06, 0x40, 0x06, 0xe6, 0x05, 0x91, 0x05, 0x41, 0x05, 0xf6, 0x04, 0xae, 0x04, 0x6b, 0x04, 0x2c, 
0x04, 0xf0, 0x03, 0xb7, 0x03, 0x82, 0x03, 0x4f, 0x03, 0x20, 0x03, 0xf3, 0x02, 0xc8, 0x02, 0xa1, 
0x02, 0x7b, 0x02, 0x57, 0x02, 0x36, 0x02, 0x16, 0x02, 0xf8, 0x01, 0xdc, 0x01, 0xc1, 0x01, 0xa8, 
0x01, 0x90, 0x01, 0x79, 0x01, 0x64, 0x01, 0x50, 0x01, 0x3d, 0x01, 0x2c, 0x01, 0x1b, 0x01, 0x0b, 
0x01, 0xfc, 0x00, 0xee, 0x00, 0xe0, 0x00, 0xd4, 0x00, 0xc8, 0x00, 0xbd, 0x00, 0xb2, 0x00, 0xa8, 
0x00, 0x9f, 0x00, 0x96, 0x00, 0x8d, 0x00, 0x85, 0x00, 0x7e, 0x00, 0x77, 0x00, 0x70, 0x00, 0x6a, 
0x00, 0x64, 0x00, 0x5e, 0x00, 0x59, 0x00, 0x54, 0x00, 0x4f, 0x00, 0x4b, 0x00, 0x47, 0x00, 0x43, 
0x00, 0x3f, 0x00, 0x3b, 0x00, 0x38, 0x00, 0x35, 0x00, 0x32, 0x00, 0x2f, 0x00, 0x2d, 0x00, 0x2a, 
0x00, 0x28, 0x00, 0x25, 0x00, 0x23, 0x00, 0x21, 0x00, 0xdd, 0x21, 0xfc, 0xc5, 0x2a, 0x96, 0xc5, 
0x3e, 0x01, 0xcd, 0x4c, 0xc7, 0x22, 0x96, 0xc5, 0xdd, 0x21, 0x10, 0xc6, 0x2a, 0x98, 0xc5, 0x3e, 
0x02, 0xcd, 0x4c, 0xc7, 0x22, 0x98, 0xc5, 0xdd, 0x21, 0x24, 0xc6, 0x2a, 0x9a, 0xc5, 0x3e, 0x03, 
0xcd, 0x4c, 0xc7, 0x22, 0x9a, 0xc5, 0x3a, 0x27, 0xc6, 0x07, 0x47, 0x3a, 0x13, 0xc6, 0xb0, 0x07, 
0x47, 0x3a, 0xff, 0xc5, 0xb0, 0x16, 0x07, 0xcd, 0x37, 0xc7, 0x16, 0x0d, 0x21, 0x8f, 0xc5, 0x7a, 
0x01, 0xfd, 0xff, 0xed, 0x79, 0x7e, 0x06, 0xbf, 0xed, 0x79, 0x2b, 0x15, 0xf2, 0x26, 0xc7, 0xc9, 
0x01, 0x82, 0xc5, 0x6a, 0x26, 0x00, 0x09, 0x77, 0xc9, 0xed, 0x73, 0x94, 0xc5, 0x2a, 0x94, 0xc5, 
0xed, 0x7b, 0x92, 0xc5, 0xc9, 0xed, 0x73, 0x92, 0xc5, 0xf9, 0x32, 0x91, 0xc5, 0xdd, 0x35, 0x02, 
0xca, 0x5b, 0xc8, 0xdd, 0x35, 0x06, 0x20, 0x36, 0xdd, 0x6e, 0x04, 0xdd, 0x66, 0x05, 0x7e, 0xfe, 
0x80, 0x20, 0x0c, 0x23, 0x5e, 0x23, 0x56, 0xdd, 0x73, 0x04, 0xdd, 0x72, 0x05, 0x18, 0xe9, 0xfe, 
0x1e, 0x38, 0x0c, 0xd6, 0x32, 0xdd, 0x77, 0x09, 0xdd, 0x36, 0x06, 0x01, 0x23, 0x18, 0x09, 0xdd, 
0x77, 0x09, 0x23, 0x7e, 0xdd, 0x77, 0x06, 0x23, 0xdd, 0x75, 0x04, 0xdd, 0x74, 0x05, 0xdd, 0x7e, 
0x07, 0xdd, 0xb6, 0x08, 0xca, 0x1e, 0xc8, 0xdd, 0xcb, 0x0e, 0x56, 0xc2, 0x1e, 0xc8, 0xdd, 0x6e, 
0x0c, 0xdd, 0x66, 0x0d, 0x7e, 0x23, 0xdd, 0x75, 0x0c, 0xdd, 0x74, 0x0d, 0xfe, 0x80, 0x20, 0x06, 
0x7e, 0x23, 0x66, 0x6f, 0x18, 0xee, 0xfe, 0x82, 0xc2, 0xc9, 0xc7, 0xdd, 0xcb, 0x0e, 0xde, 0xc3, 
0xab, 0xc7, 0xfe, 0x83, 0xc2, 0xd5, 0xc7, 0xdd, 0xcb, 0x0e, 0x9e, 0xc3, 0xab, 0xc7, 0xfe, 0x84, 
0xc2, 0xe5, 0xc7, 0x3e, 0x09, 0xdd, 0xae, 0x03, 0xdd, 0x77, 0x03, 0xc3, 0xab, 0xc7, 0xdd, 0xcb, 
0x0e, 0x5e, 0xca, 0x07, 0xc8, 0xdd, 0x86, 0x12, 0xdd, 0x77, 0x12, 0x3d, 0x87, 0x5f, 0x16, 0x00, 
0x21, 0x38, 0xc6, 0x19, 0x7e, 0xdd, 0x77, 0x07, 0x23, 0x7e, 0xdd, 0x77, 0x08, 0xc3, 0x1e, 0xc8, 
0x5f, 0x16, 0x00, 0xdd, 0x6e, 0x07, 0xdd, 0x66, 0x08, 0xe6, 0x80, 0xca, 0x17, 0xc8, 0x16, 0xff, 
0x19, 0xdd, 0x75, 0x07, 0xdd, 0x74, 0x08, 0x3a, 0x90, 0xc5, 0x16, 0x06, 0xcd, 0x37, 0xc7, 0xdd, 
0xcb, 0x0e, 0x96, 0x3a, 0x91, 0xc5, 0xc6, 0x07, 0x57, 0xdd, 0x7e, 0x07, 0xdd, 0xb6, 0x08, 0x28, 
0x03, 0xdd, 0x7e, 0x09, 0xcd, 0x37, 0xc7, 0x3a, 0x91, 0xc5, 0x3d, 0x87, 0x57, 0xdd, 0x7e, 0x07, 
0xcd, 0x37, 0xc7, 0x14, 0xdd, 0x7e, 0x08, 0xcd, 0x37, 0xc7, 0xc3, 0x40, 0xc7, 0xdd, 0x75, 0x00, 
0xdd, 0x74, 0x01, 0xc9, 0xdd, 0x6e, 0x00, 0xdd, 0x66, 0x01, 0x7e, 0x23, 0xcd, 0x54, 0xc8, 0xcb, 
0x7f, 0xc2, 0xd8, 0xc8, 0x22, 0x94, 0xc5, 0xb7, 0x28, 0x1b, 0xdd, 0x86, 0x0f, 0xdd, 0x77, 0x12, 
0xdd, 0xcb, 0x0e, 0x9e, 0x3d, 0x87, 0x5f, 0x16, 0x00, 0x21, 0x38, 0xc6, 0x19, 0x5e, 0x23, 0x56, 
0x2a, 0x94, 0xc5, 0x18, 0x03, 0x11, 0x00, 0x00, 0x7e, 0x23, 0xcd, 0x54, 0xc8, 0xdd, 0x77, 0x02, 
0xdd, 0x73, 0x07, 0xdd, 0x72, 0x08, 0xdd, 0x7e, 0x10, 0xdd, 0x77, 0x0c, 0xdd, 0x7e, 0x11, 0xdd, 
0x77, 0x0d, 0xdd, 0xcb, 0x0e, 0xd6, 0xdd, 0xcb, 0x0e, 0x4e, 0xc2, 0x5a, 0xc7, 0xdd, 0xcb, 0x0e, 
0x46, 0xca, 0xbf, 0xc8, 0xdd, 0xcb, 0x0e, 0xce, 0xdd, 0x4e, 0x0a, 0xdd, 0x46, 0x0b, 0x0a, 0xdd, 
0x77, 0x09, 0x03, 0x0a, 0x03, 0xdd, 0x77, 0x06, 0xdd, 0x71, 0x04, 0xdd, 0x70, 0x05, 0xc3, 0x1e, 
0xc8, 0xe6, 0x7f, 0x22, 0x94, 0xc5, 0x87, 0x5f, 0x16, 0x00, 0x21, 0xee, 0xc8, 0x19, 0x7e, 0x23, 
0x66, 0x6f, 0xe5, 0x2a, 0x94, 0xc5, 0xc9, 0x0c, 0xc9, 0x18, 0xc9, 0x26, 0xc9, 0x30, 0xc9, 0x42, 
0xc9, 0x4d, 0xc9, 0x7a, 0xc9, 0x58, 0xc9, 0x68, 0xc9, 0x73, 0xc9, 0x8a, 0xc9, 0x98, 0xc9, 0xa6, 
0xc9, 0xb3, 0xc9, 0xc3, 0xc9, 0x7e, 0xdd, 0x77, 0x00, 0x23, 0x7e, 0xdd, 0x77, 0x01, 0xc3, 0x5b, 
0xc8, 0x7e, 0xdd, 0x77, 0x00, 0x23, 0x7e, 0xdd, 0x77, 0x01, 0x23, 0xe5, 0xc3, 0x5b, 0xc8, 0x46, 
0xc5, 0x23, 0xe5, 0xcd, 0x54, 0xc8, 0xc3, 0x5b, 0xc8, 0xd1, 0xc1, 0x10, 0x03, 0xc3, 0x5b, 0xc8, 
0xc5, 0xd5, 0xdd, 0x73, 0x00, 0xdd, 0x72, 0x01, 0xc3, 0x5b, 0xc8, 0x7e, 0x23, 0x32, 0x90, 0xc5, 
0xcd, 0x54, 0xc8, 0xc3, 0x5b, 0xc8, 0x7e, 0x23, 0xcd, 0x54, 0xc8, 0xdd, 0x77, 0x03, 0xc3, 0x5b, 
0xc8, 0x7e, 0xdd, 0x77, 0x0a, 0x23, 0x7e, 0xdd, 0x77, 0x0b, 0x23, 0xcd, 0x54, 0xc8, 0xc3, 0x5b, 
0xc8, 0x7e, 0x23, 0xcd, 0x54, 0xc8, 0xdd, 0x77, 0x0f, 0xc3, 0x5b, 0xc8, 0xe1, 0xcd, 0x54, 0xc8, 
0xc3, 0x5b, 0xc8, 0x7e, 0xdd, 0x77, 0x10, 0x23, 0x7e, 0xdd, 0x77, 0x11, 0x23, 0xcd, 0x54, 0xc8, 
0xc3, 0x5b, 0xc8, 0xdd, 0xcb, 0x0e, 0xc6, 0xdd, 0xcb, 0x0e, 0x8e, 0xcd, 0x54, 0xc8, 0xc3, 0x5b, 
0xc8, 0xdd, 0xcb, 0x0e, 0x86, 0xdd, 0xcb, 0x0e, 0x8e, 0xcd, 0x54, 0xc8, 0xc3, 0x5b, 0xc8, 0x5e, 
0x23, 0x56, 0x23, 0xcd, 0x54, 0xc8, 0x01, 0x5b, 0xc8, 0xc5, 0xd5, 0xc9, 0x3a, 0x90, 0xc5, 0x86, 
0xe6, 0x1f, 0x32, 0x90, 0xc5, 0x23, 0xcd, 0x54, 0xc8, 0xc3, 0x5b, 0xc8, 0x7e, 0xdd, 0x86, 0x0f, 
0xdd, 0x77, 0x0f, 0x23, 0xcd, 0x54, 0xc8, 0xc3, 0x5b, 0xc8, 0xd7, 0xc9, 0x54, 0xcb, 0x17, 0xcc, 
0x87, 0x3f, 0xca, 0x86, 0x37, 0xca, 0x81, 0x6a, 0xca, 0x34, 0x50, 0x00, 0x50, 0x82, 0x02, 0x81, 
0xc2, 0xca, 0x81, 0xc2, 0xca, 0x81, 0x7d, 0xca, 0x83, 0x86, 0x08, 0xcd, 0x87, 0xd8, 0xcc, 0x82, 
0x03, 0x28, 0x32, 0x28, 0x14, 0x28, 0x0a, 0x2d, 0x32, 0x2c, 0x0a, 0x2b, 0x0a, 0x2a, 0x0a, 0x83, 
0x28, 0x32, 0x28, 0x14, 0x28, 0x0a, 0x82, 0x04, 0x2f, 0x05, 0x83, 0x2d, 0x0a, 0x2d, 0x05, 0x88, 
0xf1, 0x82, 0x0f, 0x38, 0x01, 0x8e, 0x01, 0x00, 0x02, 0x83, 0x82, 0x02, 0x81, 0xc2, 0xca, 0x88, 
0x02, 0x81, 0xc2, 0xca, 0x81, 0x7d, 0xca, 0x88, 0x00, 0x81, 0x49, 0xca, 0x83, 0x80, 0xd7, 0xc9, 
0x02, 0xfe, 0xfb, 0x05, 0x00, 0x80, 0x37, 0xca, 0x0f, 0x01, 0x40, 0x3f, 0x3e, 0x3d, 0x3c, 0x80, 
0x3f, 0xca, 0x86, 0x08, 0xcd, 0x87, 0xd8, 0xcc, 0x31, 0x0a, 0x31, 0x0a, 0x31, 0x14, 0x31, 0x14, 
0x31, 0x0a, 0x2f, 0x14, 0x2f, 0x0a, 0x2f, 0x0a, 0x2f, 0x05, 0x2f, 0x05, 0x2d, 0x0a, 0x2d, 0x0a, 
0x2b, 0x14, 0x89, 0x34, 0x14, 0x37, 0x14, 0x3b, 0x14, 0x37, 0x14, 0x39, 0x28, 0x37, 0x14, 0x36, 
0x14, 0x3b, 0x28, 0x39, 0x28, 0x89, 0x86, 0x2f, 0xcb, 0x87, 0x27, 0xcb, 0x8e, 0x0c, 0x28, 0x50, 
0x27, 0x1e, 0x28, 0x1e, 0x27, 0x14, 0x00, 0x14, 0x27, 0x12, 0x00, 0x02, 0x27, 0x0a, 0x25, 0x0a, 
0x23, 0x0a, 0x25, 0x5a, 0x28, 0x50, 0x2a, 0x14, 0x2c, 0x0a, 0x2a, 0x14, 0x28, 0x1e, 0x25, 0x28, 
0x2d, 0x0a, 0x2c, 0x0a, 0x2a, 0x0a, 0x2c, 0x32, 0x24, 0x05, 0x25, 0x05, 0x26, 0x05, 0x27, 0x05, 
0x28, 0x05, 0x29, 0x05, 0x2a, 0x05, 0x2b, 0x05, 0x8e, 0xf4, 0x89, 0x86, 0x2f, 0xcb, 0x87, 0x27, 
0xcb, 0x82, 0x02, 0x38, 0x0a, 0x39, 0x0a, 0x00, 0x0a, 0x36, 0x0a, 0x38, 0x0a, 0x00, 0x0a, 0x34, 
0x0a, 0x36, 0x0a, 0x00, 0x0a, 0x33, 0x0a, 0x34, 0x0a, 0x00, 0x0a, 0x31, 0x0a, 0x33, 0x0a, 0x00, 
0x0a, 0x2f, 0x0a, 0x83, 0x31, 0x0a, 0x00, 0x46, 0x31, 0x28, 0x34, 0x14, 0x36, 0x0a, 0x34, 0x0a, 
0x00, 0x50, 0x86, 0x20, 0xcb, 0x87, 0x3a, 0xcb, 0x40, 0x05, 0x3f, 0x05, 0x3d, 0x05, 0x3b, 0x05, 
0x3f, 0x05, 0x3d, 0x05, 0x3b, 0x05, 0x39, 0x05, 0x3d, 0x05, 0x3b, 0x05, 0x39, 0x05, 0x38, 0x05, 
0x3b, 0x05, 0x39, 0x05, 0x38, 0x05, 0x36, 0x05, 0x89, 0x82, 0x00, 0x0c, 0xf4, 0x80, 0x21, 0xcb, 
0x0f, 0x01, 0x0e, 0x02, 0x0d, 0x02, 0x0c, 0x00, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 
0x80, 0x2f, 0xcb, 0x0f, 0x01, 0x40, 0x3f, 0x3e, 0x0b, 0x00, 0x0f, 0x01, 0x40, 0x3f, 0x3e, 0x3d, 
0x3c, 0x3b, 0x3a, 0x39, 0x38, 0x00, 0x00, 0x82, 0x0c, 0xf4, 0x80, 0x4e, 0xcb, 0x00, 0xf0, 0x81, 
0x49, 0xca, 0x82, 0x02, 0x81, 0xbd, 0xcb, 0x81, 0xbd, 0xcb, 0x81, 0xa6, 0xcb, 0x83, 0x86, 0x4e, 
0xcb, 0x87, 0x41, 0xcb, 0x82, 0x04, 0x00, 0x0a, 0x34, 0x0a, 0x36, 0x0a, 0x34, 0x0a, 0x39, 0x14, 
0x38, 0x0a, 0x34, 0x0a, 0x00, 0x0a, 0x34, 0x0a, 0x36, 0x0a, 0x34, 0x0a, 0x39, 0x05, 0x39, 0x05, 
0x38, 0x0a, 0x34, 0x0a, 0x36, 0x0a, 0x83, 0x82, 0x02, 0x81, 0xbd, 0xcb, 0x88, 0x02, 0x81, 0xbd, 
0xcb, 0x81, 0xa6, 0xcb, 0x88, 0x01, 0x81, 0x49, 0xca, 0x88, 0x00, 0x83, 0x80, 0x54, 0xcb, 0x86, 
0x2f, 0xcb, 0x87, 0x27, 0xcb, 0x31, 0x50, 0x2f, 0x50, 0x2a, 0x8c, 0x2c, 0x14, 0x31, 0x50, 0x31, 
0x50, 0x2d, 0x50, 0x30, 0x50, 0x89, 0x87, 0xdb, 0xcb, 0x86, 0xd3, 0xcb, 0x82, 0x08, 0x34, 0x0a, 
0x34, 0x0a, 0x34, 0x0a, 0x34, 0x14, 0x34, 0x14, 0x34, 0x0a, 0x83, 0x89, 0x82, 0x07, 0x00, 0xf9, 
0x00, 0x80, 0xd3, 0xcb, 0x0d, 0x01, 0x40, 0x3f, 0x3e, 0x3d, 0x3c, 0x3b, 0x3a, 0x39, 0x38, 0x37, 
0x00, 0x00, 0x87, 0xe7, 0xcc, 0x86, 0x08, 0xcd, 0x2b, 0x05, 0x2b, 0x05, 0x2b, 0x0a, 0x2b, 0x0a, 
0x2b, 0x05, 0x29, 0x0f, 0x2b, 0x0a, 0x2f, 0x14, 0x89, 0x0d, 0x01, 0x3d, 0x00, 0x04, 0x80, 0x00, 
0xcc, 0x01, 0x01, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x01, 0x01, 0x80, 0x08, 0xcc, 
0x86, 0x08, 0xcc, 0x87, 0x00, 0xcc, 0x88, 0xf4, 0x81, 0x6a, 0xca, 0x88, 0x01, 0x81, 0x49, 0xca, 
0x88, 0x00, 0x82, 0x02, 0x81, 0x92, 0xcc, 0x81, 0x92, 0xcc, 0x81, 0x67, 0xcc, 0x83, 0x82, 0x0c, 
0x81, 0xac, 0xcc, 0x83, 0x88, 0x05, 0x81, 0xa9, 0xcc, 0x88, 0x07, 0x81, 0xa9, 0xcc, 0x88, 0x00, 
0x82, 0x02, 0x81, 0x92, 0xcc, 0x88, 0x02, 0x81, 0x92, 0xcc, 0x81, 0x67, 0xcc, 0x88, 0x00, 0x87, 
0x27, 0xcb, 0x84, 0x14, 0x85, 0x01, 0x07, 0x28, 0x85, 0x08, 0x00, 0x78, 0x83, 0x80, 0x17, 0xcc, 
0x8e, 0xfd, 0x81, 0xa9, 0xcc, 0x8e, 0x07, 0x81, 0xa9, 0xcc, 0x8e, 0x03, 0x81, 0xa9, 0xcc, 0x8e, 
0xfb, 0x81, 0xa9, 0xcc, 0x8e, 0xfb, 0x81, 0xa9, 0xcc, 0x8e, 0x08, 0x81, 0xa9, 0xcc, 0x8e, 0xfd, 
0x81, 0xa9, 0xcc, 0x8e, 0x02, 0x81, 0xa9, 0xcc, 0x8e, 0xfc, 0x89, 0x82, 0x08, 0x81, 0xac, 0xcc, 
0x83, 0x8e, 0x05, 0x82, 0x04, 0x81, 0xac, 0xcc, 0x83, 0x8e, 0xfb, 0x82, 0x04, 0x81, 0xac, 0xcc, 
0x83, 0x89, 0x81, 0xac, 0xcc, 0x87, 0xd8, 0xcc, 0x84, 0x09, 0x85, 0x01, 0x07, 0x01, 0x85, 0x08, 
0x86, 0xf7, 0xcc, 0x10, 0x09, 0x84, 0x00, 0x85, 0x01, 0x07, 0x01, 0x85, 0x08, 0x1c, 0x09, 0x84, 
0x14, 0x85, 0x01, 0x8a, 0x82, 0x0a, 0x07, 0x01, 0x8d, 0x01, 0x83, 0x8b, 0x85, 0x08, 0x1c, 0x0a, 
0x89, 0x0f, 0x02, 0x0e, 0x02, 0x0d, 0x02, 0x3e, 0x3d, 0x3c, 0x3b, 0x3a, 0x39, 0x38, 0x00, 0x00, 
0x0f, 0x01, 0x0e, 0x02, 0x0d, 0x02, 0x3e, 0x3d, 0x3c, 0x3b, 0x3a, 0x39, 0x38, 0x37, 0x00, 0x00, 
0xfc, 0xfe, 0x02, 0x04, 0x04, 0x02, 0xfe, 0xfc, 0x80, 0xf7, 0xcc, 0x82, 0x0c, 0xf4, 0x80, 0x03, 
0xcd, 0x1e, 0x80, 0x08, 0xcd, 
};
*/
// Tetris2
#define ROM_ADDR (51285 - 10)
const uint8_t rom[] PROGMEM = {
  0xcd, (ROM_ADDR + 10), (ROM_ADDR + 10) >> 8,
  0x76,
  0xcd, ROM_ADDR + 16, (ROM_ADDR + 16) >> 8,
  0xc3, ROM_ADDR + 3, (ROM_ADDR + 3) >> 8,
0xc3, 0x5e, 0xc8, 0xc3, 0xb3, 0xc8, 0xc3, 0x1e, 0xca, 0xf3, 0x2a, 0x0f, 0xcd, 0x22, 0x3a, 0xc9, 
0x2a, 0x11, 0xcd, 0x22, 0x4e, 0xc9, 0x2a, 0x13, 0xcd, 0x22, 0x62, 0xc9, 0x3e, 0x01, 0x32, 0x3c, 
0xc9, 0x32, 0x50, 0xc9, 0x32, 0x64, 0xc9, 0x3e, 0x08, 0x32, 0x3d, 0xc9, 0x32, 0x51, 0xc9, 0x32, 
0x65, 0xc9, 0x21, 0xfa, 0xc8, 0x11, 0x20, 0x00, 0x22, 0xd4, 0xc8, 0x19, 0x22, 0xd6, 0xc8, 0x19, 
0x22, 0xd8, 0xc8, 0x21, 0x00, 0x00, 0x22, 0x48, 0xc9, 0x22, 0x5c, 0xc9, 0x22, 0x70, 0xc9, 0x22, 
0x4a, 0xc9, 0x22, 0x5e, 0xc9, 0x22, 0x72, 0xc9, 0xaf, 0x32, 0xce, 0xc8, 0xfb, 0xc9, 0xf3, 0x3e, 
0xff, 0x16, 0x07, 0xcd, 0x75, 0xca, 0xcd, 0x5f, 0xca, 0xfb, 0xc9, 0x4e, 0x0a, 0xdd, 0x46, 0x0b, 
0x0a, 0xdd, 0x77, 0x09, 0x03, 0x0a, 0x03, 0xdd, 0x77, 0x06, 0xdd, 0x71, 0x04, 0xdd, 0x70, 0x05, 
0xc3, 0x1e, 0xc8, 0xe6, 0x7f, 0x22, 0x94, 0xc5, 0x87, 0x5f, 0x16, 0x00, 0x21, 0xee, 0xc8, 0x19, 
0x7e, 0x23, 0x66, 0x6f, 0xe5, 0x2a, 0x94, 0xc5, 0xc9, 0x0c, 0xc9, 0x18, 0xc9, 0x26, 0xc9, 0x30, 
0xc9, 0x42, 0xc9, 0x4d, 0xc9, 0x7a, 0xc9, 0x58, 0xc9, 0x68, 0xc9, 0x73, 0xc9, 0x8a, 0xc9, 0x98, 
0xc9, 0xa6, 0xc9, 0xb3, 0xc9, 0xc3, 0xc9, 0x7e, 0xdd, 0x77, 0x00, 0x23, 0x7e, 0xdd, 0x77, 0x01, 
0xc3, 0x5b, 0xc8, 0x7e, 0xdd, 0x77, 0x00, 0x23, 0x7e, 0xdd, 0x77, 0x01, 0x23, 0xe5, 0xc3, 0x5b, 
0xc8, 0x46, 0xc5, 0x23, 0xe5, 0xcd, 0x54, 0xc8, 0xc3, 0x5b, 0xc8, 0xd1, 0xc1, 0x10, 0x03, 0xc3, 
0x5b, 0xc8, 0xc5, 0xd5, 0xdd, 0x73, 0x00, 0xdd, 0x72, 0x01, 0xc3, 0x5b, 0xc8, 0x7e, 0x23, 0x32, 
0x90, 0xc5, 0xcd, 0x54, 0xc8, 0xc3, 0x5b, 0xc8, 0x7e, 0x23, 0xcd, 0x54, 0xc8, 0xdd, 0x77, 0x03, 
0xc3, 0x5b, 0xc8, 0x7e, 0xdd, 0x77, 0x0a, 0x23, 0x7e, 0xdd, 0x77, 0x0b, 0x23, 0xcd, 0x54, 0xc8, 
0xc3, 0x5b, 0xc8, 0x7e, 0x23, 0xcd, 0x54, 0xc8, 0xdd, 0x77, 0x0f, 0xc3, 0x5b, 0xc8, 0xe1, 0xcd, 
0x54, 0xbf, 0x0f, 0xdc, 0x0e, 0x07, 0x0e, 0x3d, 0x0d, 0x7f, 0x0c, 0xcc, 0x0b, 0x22, 0x0b, 0x82, 
0x0a, 0xeb, 0x09, 0x5d, 0x09, 0xd6, 0x08, 0x57, 0x08, 0xdf, 0x07, 0x6e, 0x07, 0x03, 0x07, 0x9f, 
0x06, 0x40, 0x06, 0xe6, 0x05, 0x91, 0x05, 0x41, 0x05, 0xf6, 0x04, 0xae, 0x04, 0x6b, 0x04, 0x2c, 
0x04, 0xf0, 0x03, 0xb7, 0x03, 0x82, 0x03, 0x4f, 0x03, 0x20, 0x03, 0xf3, 0x02, 0xc8, 0x02, 0xa1, 
0x02, 0x7b, 0x02, 0x57, 0x02, 0x36, 0x02, 0x16, 0x02, 0xf8, 0x01, 0xdc, 0x01, 0xc1, 0x01, 0xa8, 
0x01, 0x90, 0x01, 0x79, 0x01, 0x64, 0x01, 0x50, 0x01, 0x3d, 0x01, 0x2c, 0x01, 0x1b, 0x01, 0x0b, 
0x01, 0xfc, 0x00, 0xee, 0x00, 0xe0, 0x00, 0xd4, 0x00, 0xc8, 0x00, 0xbd, 0x00, 0xb2, 0x00, 0xa8, 
0x00, 0x9f, 0x00, 0x96, 0x00, 0x8d, 0x00, 0x85, 0x00, 0x7e, 0x00, 0x77, 0x00, 0x70, 0x00, 0x6a, 
0x00, 0x64, 0x00, 0x5e, 0x00, 0x59, 0x00, 0x54, 0x00, 0x4f, 0x00, 0x4b, 0x00, 0x47, 0x00, 0x43, 
0x00, 0x3f, 0x00, 0x3b, 0x00, 0x38, 0x00, 0x35, 0x00, 0x32, 0x00, 0x2f, 0x00, 0x2d, 0x00, 0x2a, 
0x00, 0x28, 0x00, 0x25, 0x00, 0x23, 0x00, 0x21, 0x00, 0xdd, 0x21, 0x3a, 0xc9, 0x2a, 0xd4, 0xc8, 
0x3e, 0x01, 0xcd, 0x8a, 0xca, 0x22, 0xd4, 0xc8, 0xdd, 0x21, 0x4e, 0xc9, 0x2a, 0xd6, 0xc8, 0x3e, 
0x02, 0xcd, 0x8a, 0xca, 0x22, 0xd6, 0xc8, 0xdd, 0x21, 0x62, 0xc9, 0x2a, 0xd8, 0xc8, 0x3e, 0x03, 
0xcd, 0x8a, 0xca, 0x22, 0xd8, 0xc8, 0x3a, 0x65, 0xc9, 0x07, 0x47, 0x3a, 0x51, 0xc9, 0xb0, 0x07, 
0x47, 0x3a, 0x3d, 0xc9, 0xb0, 0x16, 0x07, 0xcd, 0x75, 0xca, 0x16, 0x0d, 0x21, 0xcd, 0xc8, 0x7a, 
0x01, 0xfd, 0xff, 0xed, 0x79, 0x7e, 0x06, 0xbf, 0xed, 0x79, 0x2b, 0x15, 0xf2, 0x64, 0xca, 0xc9, 
0x01, 0xc0, 0xc8, 0x6a, 0x26, 0x00, 0x09, 0x77, 0xc9, 0xed, 0x73, 0xd2, 0xc8, 0x2a, 0xd2, 0xc8, 
0xed, 0x7b, 0xd0, 0xc8, 0xc9, 0xed, 0x73, 0xd0, 0xc8, 0xf9, 0x32, 0xcf, 0xc8, 0xdd, 0x35, 0x02, 
0xca, 0x99, 0xcb, 0xdd, 0x35, 0x06, 0x20, 0x36, 0xdd, 0x6e, 0x04, 0xdd, 0x66, 0x05, 0x7e, 0xfe, 
0x80, 0x20, 0x0c, 0x23, 0x5e, 0x23, 0x56, 0xdd, 0x73, 0x04, 0xdd, 0x72, 0x05, 0x18, 0xe9, 0xfe, 
0x1e, 0x38, 0x0c, 0xd6, 0x32, 0xdd, 0x77, 0x09, 0xdd, 0x36, 0x06, 0x01, 0x23, 0x18, 0x09, 0xdd, 
0x77, 0x09, 0x23, 0x7e, 0xdd, 0x77, 0x06, 0x23, 0xdd, 0x75, 0x04, 0xdd, 0x74, 0x05, 0xdd, 0x7e, 
0x07, 0xdd, 0xb6, 0x08, 0xca, 0x5c, 0xcb, 0xdd, 0xcb, 0x0e, 0x56, 0xc2, 0x5c, 0xcb, 0xdd, 0x6e, 
0x0c, 0xdd, 0x66, 0x0d, 0x7e, 0x23, 0xdd, 0x75, 0x0c, 0xdd, 0x74, 0x0d, 0xfe, 0x80, 0x20, 0x06, 
0x7e, 0x23, 0x66, 0x6f, 0x18, 0xee, 0xfe, 0x82, 0xc2, 0x07, 0xcb, 0xdd, 0xcb, 0x0e, 0xde, 0xc3, 
0xe9, 0xca, 0xfe, 0x83, 0xc2, 0x13, 0xcb, 0xdd, 0xcb, 0x0e, 0x9e, 0xc3, 0xe9, 0xca, 0xfe, 0x84, 
0xc2, 0x23, 0xcb, 0x3e, 0x09, 0xdd, 0xae, 0x03, 0xdd, 0x77, 0x03, 0xc3, 0xe9, 0xca, 0xdd, 0xcb, 
0x0e, 0x5e, 0xca, 0x45, 0xcb, 0xdd, 0x86, 0x12, 0xdd, 0x77, 0x12, 0x3d, 0x87, 0x5f, 0x16, 0x00, 
0x21, 0x76, 0xc9, 0x19, 0x7e, 0xdd, 0x77, 0x07, 0x23, 0x7e, 0xdd, 0x77, 0x08, 0xc3, 0x5c, 0xcb, 
0x5f, 0x16, 0x00, 0xdd, 0x6e, 0x07, 0xdd, 0x66, 0x08, 0xe6, 0x80, 0xca, 0x55, 0xcb, 0x16, 0xff, 
0x19, 0xdd, 0x75, 0x07, 0xdd, 0x74, 0x08, 0x3a, 0xce, 0xc8, 0x16, 0x06, 0xcd, 0x75, 0xca, 0xdd, 
0xcb, 0x0e, 0x96, 0x3a, 0xcf, 0xc8, 0xc6, 0x07, 0x57, 0xdd, 0x7e, 0x07, 0xdd, 0xb6, 0x08, 0x28, 
0x03, 0xdd, 0x7e, 0x09, 0xcd, 0x75, 0xca, 0x3a, 0xcf, 0xc8, 0x3d, 0x87, 0x57, 0xdd, 0x7e, 0x07, 
0xcd, 0x75, 0xca, 0x14, 0xdd, 0x7e, 0x08, 0xcd, 0x75, 0xca, 0xc3, 0x7e, 0xca, 0xdd, 0x75, 0x00, 
0xdd, 0x74, 0x01, 0xc9, 0xdd, 0x6e, 0x00, 0xdd, 0x66, 0x01, 0x7e, 0x23, 0xcd, 0x92, 0xcb, 0xcb, 
0x7f, 0xc2, 0x16, 0xcc, 0x22, 0xd2, 0xc8, 0xb7, 0x28, 0x1b, 0xdd, 0x86, 0x0f, 0xdd, 0x77, 0x12, 
0xdd, 0xcb, 0x0e, 0x9e, 0x3d, 0x87, 0x5f, 0x16, 0x00, 0x21, 0x76, 0xc9, 0x19, 0x5e, 0x23, 0x56, 
0x2a, 0xd2, 0xc8, 0x18, 0x03, 0x11, 0x00, 0x00, 0x7e, 0x23, 0xcd, 0x92, 0xcb, 0xdd, 0x77, 0x02, 
0xdd, 0x73, 0x07, 0xdd, 0x72, 0x08, 0xdd, 0x7e, 0x10, 0xdd, 0x77, 0x0c, 0xdd, 0x7e, 0x11, 0xdd, 
0x77, 0x0d, 0xdd, 0xcb, 0x0e, 0xd6, 0xdd, 0xcb, 0x0e, 0x4e, 0xc2, 0x98, 0xca, 0xdd, 0xcb, 0x0e, 
0x46, 0xca, 0xfd, 0xcb, 0xdd, 0xcb, 0x0e, 0xce, 0xdd, 0x4e, 0x0a, 0xdd, 0x46, 0x0b, 0x0a, 0xdd, 
0x77, 0x09, 0x03, 0x0a, 0x03, 0xdd, 0x77, 0x06, 0xdd, 0x71, 0x04, 0xdd, 0x70, 0x05, 0xc3, 0x5c, 
0xcb, 0xe6, 0x7f, 0x22, 0xd2, 0xc8, 0x87, 0x5f, 0x16, 0x00, 0x21, 0x2c, 0xcc, 0x19, 0x7e, 0x23, 
0x66, 0x6f, 0xe5, 0x2a, 0xd2, 0xc8, 0xc9, 0x4a, 0xcc, 0x56, 0xcc, 0x64, 0xcc, 0x6e, 0xcc, 0x80, 
0xcc, 0x8b, 0xcc, 0xb8, 0xcc, 0x96, 0xcc, 0xa6, 0xcc, 0xb1, 0xcc, 0xc8, 0xcc, 0xd6, 0xcc, 0xe4, 
0xcc, 0xf1, 0xcc, 0x01, 0xcd, 0x7e, 0xdd, 0x77, 0x00, 0x23, 0x7e, 0xdd, 0x77, 0x01, 0xc3, 0x99, 
0xcb, 0x7e, 0xdd, 0x77, 0x00, 0x23, 0x7e, 0xdd, 0x77, 0x01, 0x23, 0xe5, 0xc3, 0x99, 0xcb, 0x46, 
0xc5, 0x23, 0xe5, 0xcd, 0x92, 0xcb, 0xc3, 0x99, 0xcb, 0xd1, 0xc1, 0x10, 0x03, 0xc3, 0x99, 0xcb, 
0xc5, 0xd5, 0xdd, 0x73, 0x00, 0xdd, 0x72, 0x01, 0xc3, 0x99, 0xcb, 0x7e, 0x23, 0x32, 0xce, 0xc8, 
0xcd, 0x92, 0xcb, 0xc3, 0x99, 0xcb, 0x7e, 0x23, 0xcd, 0x92, 0xcb, 0xdd, 0x77, 0x03, 0xc3, 0x99, 
0xcb, 0x7e, 0xdd, 0x77, 0x0a, 0x23, 0x7e, 0xdd, 0x77, 0x0b, 0x23, 0xcd, 0x92, 0xcb, 0xc3, 0x99, 
0xcb, 0x7e, 0x23, 0xcd, 0x92, 0xcb, 0xdd, 0x77, 0x0f, 0xc3, 0x99, 0xcb, 0xe1, 0xcd, 0x92, 0xcb, 
0xc3, 0x99, 0xcb, 0x7e, 0xdd, 0x77, 0x10, 0x23, 0x7e, 0xdd, 0x77, 0x11, 0x23, 0xcd, 0x92, 0xcb, 
0xc3, 0x99, 0xcb, 0xdd, 0xcb, 0x0e, 0xc6, 0xdd, 0xcb, 0x0e, 0x8e, 0xcd, 0x92, 0xcb, 0xc3, 0x99, 
0xcb, 0xdd, 0xcb, 0x0e, 0x86, 0xdd, 0xcb, 0x0e, 0x8e, 0xcd, 0x92, 0xcb, 0xc3, 0x99, 0xcb, 0x5e, 
0x23, 0x56, 0x23, 0xcd, 0x92, 0xcb, 0x01, 0x99, 0xcb, 0xc5, 0xd5, 0xc9, 0x3a, 0xce, 0xc8, 0x86, 
0xe6, 0x1f, 0x32, 0xce, 0xc8, 0x23, 0xcd, 0x92, 0xcb, 0xc3, 0x99, 0xcb, 0x7e, 0xdd, 0x86, 0x0f, 
0xdd, 0x77, 0x0f, 0x23, 0xcd, 0x92, 0xcb, 0xc3, 0x99, 0xcb, 0x15, 0xcd, 0x66, 0xd0, 0xca, 0xd0, 
0x82, 0x02, 0x86, 0x5b, 0xce, 0x87, 0x61, 0xce, 0x50, 0x80, 0x50, 0x80, 0x81, 0xf4, 0xcf, 0x81, 
0xf4, 0xcf, 0x81, 0xa8, 0xcf, 0x81, 0xa8, 0xcf, 0x81, 0x3b, 0xcf, 0x81, 0x3b, 0xcf, 0x81, 0xe6, 
0xce, 0x81, 0xe6, 0xce, 0x81, 0x65, 0xce, 0x81, 0x65, 0xce, 0x83, 0x86, 0x5b, 0xce, 0x87, 0x61, 
0xce, 0x50, 0x80, 0x50, 0x70, 0x81, 0x60, 0xcd, 0x86, 0x58, 0xcd, 0x81, 0x66, 0xcd, 0x00, 0x10, 
0x80, 0x15, 0xcd, 0x82, 0x0c, 0x00, 0xf4, 0x00, 0x80, 0x58, 0xcd, 0x86, 0x55, 0xd0, 0x87, 0x5e, 
0xd0, 0x2f, 0x10, 0x34, 0x18, 0x33, 0x08, 0x36, 0x08, 0x34, 0x08, 0x2f, 0x08, 0x2c, 0x08, 0x31, 
0x20, 0x2d, 0x18, 0x31, 0x08, 0x36, 0x18, 0x34, 0x08, 0x33, 0x08, 0x31, 0x08, 0x2f, 0x08, 0x2d, 
0x08, 0x2c, 0x30, 0x2f, 0x10, 0x34, 0x18, 0x33, 0x08, 0x36, 0x08, 0x34, 0x08, 0x2f, 0x08, 0x2c, 
0x08, 0x31, 0x20, 0x2d, 0x08, 0x31, 0x08, 0x36, 0x08, 0x34, 0x08, 0x33, 0x10, 0x36, 0x10, 0x39, 
0x10, 0x33, 0x10, 0x34, 0x30, 0x38, 0x08, 0x36, 0x08, 0x33, 0x18, 0x33, 0x08, 0x31, 0x08, 0x33, 
0x08, 0x34, 0x08, 0x31, 0x08, 0x33, 0x20, 0x2f, 0x08, 0x2f, 0x08, 0x2e, 0x08, 0x2f, 0x08, 0x31, 
0x18, 0x31, 0x08, 0x36, 0x10, 0x34, 0x10, 0x33, 0x30, 0x36, 0x10, 0x36, 0x18, 0x33, 0x08, 0x2f, 
0x08, 0x2f, 0x08, 0x2e, 0x08, 0x2f, 0x08, 0x38, 0x20, 0x34, 0x08, 0x31, 0x08, 0x33, 0x08, 0x34, 
0x08, 0x33, 0x10, 0x36, 0x10, 0x34, 0x10, 0x31, 0x10, 0x2f, 0x30, 0x38, 0x08, 0x36, 0x08, 0x34, 
0x20, 0x2f, 0x18, 0x2c, 0x08, 0x31, 0x20, 0x2d, 0x10, 0x36, 0x08, 0x34, 0x08, 0x33, 0x20, 0x31, 
0x10, 0x2f, 0x10, 0x2f, 0x30, 0x2f, 0x10, 0x38, 0x20, 0x36, 0x10, 0x2f, 0x08, 0x2f, 0x08, 0x34, 
0x20, 0x33, 0x18, 0x33, 0x08, 0x31, 0x18, 0x30, 0x08, 0x31, 0x10, 0x36, 0x10, 0x36, 0x30, 0x38, 
0x08, 0x36, 0x08, 0x34, 0x20, 0x2f, 0x18, 0x2c, 0x08, 0x31, 0x20, 0x2d, 0x10, 0x36, 0x08, 0x34, 
0x08, 0x33, 0x20, 0x31, 0x10, 0x2f, 0x10, 0x38, 0x30, 0x38, 0x10, 0x3b, 0x20, 0x39, 0x10, 0x38, 
0x08, 0x38, 0x08, 0x36, 0x18, 0x38, 0x08, 0x39, 0x18, 0x39, 0x08, 0x38, 0x18, 0x38, 0x08, 0x36, 
0x18, 0x36, 0x08, 0x34, 0x30, 0x89, 0x82, 0x03, 0xfc, 0x80, 0x5b, 0xce, 0x0d, 0xde, 0x0d, 0xde, 
0x86, 0xee, 0xcf, 0x87, 0xe7, 0xcf, 0x3d, 0x08, 0x3e, 0x08, 0x3f, 0x08, 0x40, 0x08, 0x42, 0x08, 
0x40, 0x08, 0x3e, 0x08, 0x3d, 0x08, 0x3b, 0x08, 0x3d, 0x08, 0x3e, 0x08, 0x3d, 0x08, 0x40, 0x08, 
0x3e, 0x08, 0x3d, 0x08, 0x3b, 0x08, 0x3d, 0x08, 0x3e, 0x08, 0x3f, 0x08, 0x40, 0x08, 0x42, 0x08, 
0x40, 0x08, 0x3e, 0x08, 0x3d, 0x08, 0x3b, 0x08, 0x3d, 0x08, 0x3e, 0x08, 0x3d, 0x08, 0x40, 0x08, 
0x3e, 0x08, 0x3d, 0x08, 0x3b, 0x08, 0x36, 0x08, 0x38, 0x08, 0x39, 0x08, 0x38, 0x08, 0x3b, 0x08, 
0x39, 0x08, 0x38, 0x08, 0x36, 0x08, 0x38, 0x08, 0x39, 0x08, 0x3a, 0x08, 0x3b, 0x08, 0x3d, 0x08, 
0x3b, 0x08, 0x39, 0x08, 0x38, 0x08, 0x36, 0x08, 0x38, 0x08, 0x39, 0x08, 0x38, 0x08, 0x3b, 0x08, 
0x39, 0x08, 0x38, 0x08, 0x36, 0x08, 0x38, 0x08, 0x39, 0x08, 0x3b, 0x08, 0x38, 0x08, 0x34, 0x20, 
0x89, 0x39, 0x17, 0x3b, 0x08, 0x3d, 0x08, 0x3d, 0x08, 0x3b, 0x08, 0x39, 0x08, 0x38, 0x10, 0x39, 
0x10, 0x3b, 0x10, 0x34, 0x18, 0x39, 0x10, 0x3b, 0x08, 0x3d, 0x08, 0x3d, 0x08, 0x3b, 0x08, 0x39, 
0x08, 0x38, 0x10, 0x39, 0x10, 0x3b, 0x10, 0x34, 0x18, 0x36, 0x10, 0x38, 0x08, 0x39, 0x08, 0x39, 
0x08, 0x38, 0x08, 0x36, 0x08, 0x34, 0x10, 0x38, 0x10, 0x3b, 0x10, 0x39, 0x08, 0x38, 0x10, 0x36, 
0x10, 0x38, 0x08, 0x39, 0x08, 0x39, 0x08, 0x38, 0x08, 0x36, 0x08, 0x34, 0x10, 0x38, 0x10, 0x3b, 
0x10, 0x39, 0x08, 0x38, 0x09, 0x89, 0x86, 0x55, 0xd0, 0x87, 0x5e, 0xd0, 0x00, 0x07, 0x38, 0x10, 
0x36, 0x08, 0x34, 0x10, 0x34, 0x10, 0x34, 0x04, 0x36, 0x04, 0x34, 0x04, 0x33, 0x04, 0x34, 0x08, 
0x36, 0x08, 0x38, 0x10, 0x38, 0x10, 0x00, 0x08, 0x3b, 0x10, 0x39, 0x08, 0x38, 0x10, 0x38, 0x10, 
0x38, 0x04, 0x39, 0x04, 0x38, 0x04, 0x36, 0x04, 0x38, 0x08, 0x39, 0x08, 0x3b, 0x10, 0x3b, 0x10, 
0x00, 0x08, 0x39, 0x10, 0x39, 0x08, 0x39, 0x10, 0x3d, 0x08, 0x3b, 0x04, 0x39, 0x04, 0x38, 0x10, 
0x38, 0x10, 0x38, 0x10, 0x34, 0x10, 0x00, 0x08, 0x33, 0x10, 0x33, 0x08, 0x33, 0x10, 0x36, 0x08, 
0x34, 0x04, 0x33, 0x04, 0x34, 0x08, 0x31, 0x08, 0x31, 0x04, 0x33, 0x04, 0x31, 0x04, 0x30, 0x04, 
0x31, 0x21, 0x89, 0x86, 0xee, 0xcf, 0x87, 0xe7, 0xcf, 0x36, 0x10, 0x33, 0x08, 0x34, 0x08, 0x36, 
0x10, 0x33, 0x08, 0x34, 0x08, 0x36, 0x04, 0x38, 0x04, 0x36, 0x04, 0x34, 0x04, 0x33, 0x08, 0x34, 
0x08, 0x31, 0x10, 0x39, 0x08, 0x38, 0x08, 0x36, 0x10, 0x33, 0x08, 0x34, 0x08, 0x36, 0x10, 0x33, 
0x08, 0x34, 0x08, 0x38, 0x04, 0x39, 0x04, 0x38, 0x04, 0x36, 0x04, 0x38, 0x08, 0x3c, 0x08, 0x3d, 
0x20, 0x89, 0x0e, 0x01, 0x3f, 0x3e, 0x3d, 0x0a, 0x00, 0x82, 0x0c, 0xf4, 0x80, 0xee, 0xcf, 0x86, 
0x55, 0xd0, 0x87, 0x5e, 0xd0, 0x31, 0x17, 0x33, 0x08, 0x34, 0x18, 0x31, 0x04, 0x33, 0x04, 0x34, 
0x08, 0x34, 0x08, 0x33, 0x08, 0x31, 0x08, 0x33, 0x10, 0x2c, 0x10, 0x00, 0x08, 0x33, 0x10, 0x34, 
0x08, 0x36, 0x18, 0x33, 0x04, 0x34, 0x04, 0x36, 0x08, 0x36, 0x08, 0x34, 0x08, 0x33, 0x08, 0x31, 
0x20, 0x38, 0x10, 0x3d, 0x10, 0x3b, 0x08, 0x3d, 0x10, 0x3b, 0x08, 0x39, 0x08, 0x39, 0x08, 0x38, 
0x08, 0x36, 0x08, 0x38, 0x10, 0x31, 0x10, 0x00, 0x08, 0x39, 0x10, 0x36, 0x08, 0x38, 0x18, 0x33, 
0x04, 0x34, 0x04, 0x36, 0x08, 0x36, 0x08, 0x34, 0x08, 0x33, 0x08, 0x31, 0x10, 0x00, 0x11, 0x89, 
0xfe, 0xfe, 0x02, 0x02, 0x03, 0xfd, 0x80, 0x55, 0xd0, 0x00, 0x01, 0x0f, 0x01, 0x40, 0x3f, 0x0c, 
0x00, 0x87, 0x7d, 0xd0, 0x86, 0x8c, 0xd0, 0x28, 0x10, 0x84, 0x0d, 0x81, 0xa8, 0xd0, 0x25, 0x10, 
0x84, 0x07, 0x81, 0xa8, 0xd0, 0x80, 0x66, 0xd0, 0x0f, 0x03, 0x0e, 0x02, 0x0d, 0x02, 0x0c, 0x02, 
0x3d, 0x3c, 0x3b, 0x3a, 0x39, 0x00, 0x00, 0x1d, 0x80, 0x8c, 0xd0, 0x85, 0x01, 0x8a, 0x87, 0xbc, 
0xd0, 0x82, 0x04, 0x84, 0x1a, 0x07, 0x01, 0x84, 0x00, 0x07, 0x01, 0x83, 0x8b, 0x85, 0x08, 0x87, 
0x5e, 0xd0, 0x89, 0x85, 0x01, 0x8a, 0x87, 0xbc, 0xd0, 0x82, 0x10, 0x39, 0x01, 0x8d, 0x10, 0x83, 
0x8b, 0x85, 0x08, 0x87, 0x7d, 0xd0, 0x89, 0x0f, 0x01, 0x40, 0x3f, 0x3e, 0x3d, 0x3c, 0x3b, 0x3a, 
0x39, 0x38, 0x37, 0x00, 0x00, 0x82, 0x02, 0x86, 0x7a, 0xd1, 0x87, 0x6f, 0xd1, 0x0d, 0x00, 0x81, 
0x5c, 0xd1, 0x81, 0x5c, 0xd1, 0x82, 0x04, 0x14, 0x60, 0x0d, 0x20, 0x83, 0x81, 0x4f, 0xd1, 0x81, 
0x4f, 0xd1, 0x82, 0x04, 0x81, 0x3e, 0xd1, 0x83, 0x83, 0x10, 0x00, 0x81, 0xf9, 0xd0, 0x81, 0xf9, 
0xd0, 0x80, 0xca, 0xd0, 0x10, 0x40, 0x15, 0x40, 0x17, 0x40, 0x10, 0x80, 0x15, 0x40, 0x17, 0x40, 
0x10, 0x40, 0x17, 0x20, 0x12, 0x20, 0x17, 0x40, 0x12, 0x40, 0x0f, 0x40, 0x17, 0x40, 0x10, 0x40, 
0x17, 0x20, 0x12, 0x20, 0x17, 0x40, 0x10, 0x40, 0x15, 0x40, 0x17, 0x40, 0x10, 0x60, 0x17, 0x20, 
0x0d, 0x20, 0x14, 0x20, 0x15, 0x40, 0x17, 0x40, 0x10, 0x40, 0x15, 0x40, 0x17, 0x40, 0x10, 0x80, 
0x12, 0x40, 0x10, 0x20, 0x17, 0x20, 0x10, 0x40, 0x89, 0x15, 0x40, 0x10, 0x40, 0x15, 0x40, 0x10, 
0x40, 0x17, 0x40, 0x10, 0x40, 0x17, 0x40, 0x10, 0x40, 0x89, 0x0d, 0x80, 0x10, 0x80, 0x12, 0x40, 
0x0d, 0x40, 0x14, 0x40, 0x0d, 0x40, 0x89, 0x0d, 0x60, 0x14, 0x80, 0x0d, 0x60, 0x12, 0x20, 0x0d, 
0x20, 0x12, 0x20, 0x0d, 0x20, 0x14, 0x20, 0x0d, 0x20, 0x89, 0x0f, 0x02, 0x0e, 0x02, 0x3f, 0x3e, 
0x0b, 0x02, 0x80, 0x6f, 0xd1, 0x09, 0x04, 0xfc, 0xf7, 0xf7, 0xfc, 0x04, 0x82, 0x0c, 0x83, 0x04, 
0x02, 0xfe, 0xfc, 0xfc, 0xfe, 0x02, 0x82, 0xfb, 0x83, 0x06, 0x03, 0xfd, 0xfa, 0xfa, 0xfd, 0x03, 
0x82, 0x05, 0x83, 0x04, 0x02, 0xfe, 0xfc, 0xfc, 0xfe, 0x02, 0x82, 0xf4, 0x83, 0x80, 0x7a, 0xd1, 

};

void setup()
{
  set_ym_clock();
  set_bus_ctl();
}

static uint8_t peek(uint16_t addr)
{
    uint8_t res = 0;
    if (addr >= ROM_ADDR && addr < ROM_ADDR + sizeof(rom))
    {
      res = pgm_read_byte(rom + addr - ROM_ADDR);
    }
    return res;
}

static uint16_t peek2( uint16_t addr )
{
  return peek(addr) + (peek(addr+1)<<8);
//  return uint16(peek(addr)) + uint16(uint16(peek(addr+1))<<8);
}

static uint8_t ayregs[14] = {0x4E, 0xA, 0xDD, 0x46, 0xB, 0xA, 0xDD, 0x77, 0x9, 0x3, 0xA, 0x3, 0xDD, 0x77};
static void z80_write_ay_reg(uint8_t reg, uint8_t val)
{
  ayregs[reg] = val;
}

static uint16_t FXM_Table[] = {
  0xfbf, 0xedc, 0xe07, 0xd3d, 0xc7f, 0xbcc, 0xb22, 0xa82, 0x9eb, 0x95d, 0x8d6, 0x857, 0x7df, 0x76e, 0x703,
  0x69f, 0x640, 0x5e6, 0x591, 0x541, 0x4f6, 0x4ae, 0x46b, 0x42c, 0x3f0, 0x3b7, 0x382, 0x34f, 0x320, 0x2f3,
  0x2c8, 0x2a1, 0x27b, 0x257, 0x236, 0x216, 0x1f8, 0x1dc, 0x1c1, 0x1a8, 0x190, 0x179, 0x164, 0x150, 0x13d,
  0x12c, 0x11b, 0x10b, 0xfc, 0xee, 0xe0, 0xd4, 0xc8, 0xbd, 0xb2, 0xa8, 0x9f, 0x96, 0x8d, 0x85, 0x7e, 0x77, 0x70,
  0x6a, 0x64, 0x5e, 0x59, 0x54, 0x4f, 0x4b, 0x47, 0x43, 0x3f, 0x3b, 0x38, 0x35, 0x32, 0x2f, 0x2d, 0x2a, 0x28, 0x25,
  0x23, 0x21
};

struct FXMChannel
{
  uint8_t id;
  uint16_t address_in_pattern;
  uint16_t point_in_ornament;
  uint16_t ornament_pointer;
  uint16_t point_in_sample;
  uint16_t sample_pointer;
  uint8_t volume;
  uint8_t sample_tick_counter;
  uint8_t mixer;
  int16_t note_skip_counter;
  uint16_t tone;
  uint8_t note;
  uint8_t transposit;
  uint8_t amplitude;
  
  bool b0e, b1e, b2e, b3e;

  uint16_t stack[16];
  uint8_t sp;
};

static uint8_t noise;
static FXMChannel channels[3];

static void fxm_init()
{
  for (int i = 0 ; i < 3 ; ++i)
  {
    channels[i].note_skip_counter = 1;
    channels[i].mixer = 8;
    channels[i].id = i;
  }
  channels[0].address_in_pattern = 0xCD15;
  channels[1].address_in_pattern = 0xD066;
  channels[2].address_in_pattern = 0xD0CA;
}

static void fxm_play_channel(struct FXMChannel *ch)
{
  if (!--ch->note_skip_counter)
  {
    while (true)
    {
      uint8_t v = peek(ch->address_in_pattern++);
      switch (v)
      {
      case 0x80:
        // jump
        ch->address_in_pattern = peek2(ch->address_in_pattern);
        break;
      case 0x81:
        // call
        ch->stack[ch->sp++] = ch->address_in_pattern + 2;
        ch->address_in_pattern = peek2(ch->address_in_pattern);
        break;
      case 0x82:
        // loop begin
        ch->stack[ch->sp++] = peek(ch->address_in_pattern++);
        ch->stack[ch->sp++] = ch->address_in_pattern;
        break;
      case 0x83:
        // loop
        if (--ch->stack[ch->sp - 2] & 0xff)
          ch->address_in_pattern = ch->stack[ch->sp - 1];
        else
          ch->sp -= 2;
        break;
      case 0x84:
        // set noise
        noise = peek(ch->address_in_pattern++);
        break;
      case 0x85:
        // set mixer
        ch->mixer = peek(ch->address_in_pattern++);
        break;
      case 0x86:
        // set ornament
        ch->ornament_pointer = peek2(ch->address_in_pattern);
        ch->address_in_pattern += 2;
        break;
      case 0x87:
        // set sample
        ch->sample_pointer = peek2(ch->address_in_pattern);
        ch->address_in_pattern += 2;
        break;
      case 0x88:
        // transposition
        ch->transposit = peek(ch->address_in_pattern++);
        break;
      case 0x89:
        // return
        ch->address_in_pattern = ch->stack[--ch->sp];
        break;
      case 0x8a:
        // don't restart sample at new note
        ch->b0e = true;
        ch->b1e = false;
        break;
      case 0x8b:
        // restart sample at new note
        ch->b0e = false;
        ch->b1e = false;
        break;
      case 0x8c:
        // not implemented code call
        ch->address_in_pattern += 2;
        break;
      case 0x8d:
        // add to noise
        noise = (noise + peek(ch->address_in_pattern++)) & 0x1f;
        break;
      case 0x8e:
        // add transposition
        ch->transposit += peek(ch->address_in_pattern++);
        break;
      case 0x8f:
        // push transposition
        ch->stack[ch->sp++] = ch->transposit;
        break;
      case 0x90:
        // pop transposition
        ch->transposit = ch->stack[--ch->sp];
        break;
      default:
        if (v <= 0x54)
        {
          if (v)
          {
            ch->note = v + ch->transposit;
            ch->tone = FXM_Table[ch->note - 1];
            ch->b3e = false;
          }
          else
          {
            ch->tone = 0;
          }
          ch->note_skip_counter = peek(ch->address_in_pattern++);
          ch->point_in_ornament = ch->ornament_pointer;
          ch->b2e = true;
          if (!ch->b1e)
          {
            ch->b1e = ch->b0e;
            ch->point_in_sample = ch->sample_pointer;
            ch->volume = peek(ch->point_in_sample++);
            ch->sample_tick_counter = peek(ch->point_in_sample++);
            goto ret;
          }
          else
          {
            goto decode_sample;
          }
          break;
        }
      }
    }
  }

decode_sample:
  if (!--ch->sample_tick_counter)
  {
    while (true)
    {
      uint8_t s = peek(ch->point_in_sample++);
      if (s == 0x80)
      {
        ch->point_in_sample = peek2(ch->point_in_sample);
        continue;
      }
      else if (s < 0x1e)
      {
        ch->amplitude = s;
        ch->sample_tick_counter = peek(ch->point_in_sample++);
      }
      else
      {
        s -= 0x32;
        ch->amplitude = s;
        ch->sample_tick_counter = 1;
      }
      break;
    }
  }
  // decode ornament
  if (ch->tone && !ch->b2e)
  {
    while (true)
    {
      uint8_t s = peek(ch->point_in_ornament++);
      switch (s)
      {
      case 0x80:
        ch->point_in_ornament = peek2(ch->point_in_ornament);
        break;
      case 0x82:
        ch->b3e = true;
        break;
      case 0x83:
        ch->b3e = false;
        break;
      case 0x84:
        ch->mixer ^= 9;
        break;
      default:
        if (!ch->b3e)
        {
          ch->tone += (int8_t)s;
        }
        else
        {
          ch->note += s;
          ch->tone = FXM_Table[ch->note - 1];
        }
        goto ret;
      }
    }
  }
ret:
  z80_write_ay_reg(6, noise);
  ch->b2e = 0;
  
  z80_write_ay_reg(ch->id + 8, ch->tone ? ch->amplitude : 0);
  z80_write_ay_reg(2 * ch->id, ch->tone);
  z80_write_ay_reg(2 * ch->id + 1, ch->tone >> 8);
}

static void fxm_loop()
{
  fxm_play_channel(&channels[0]);
  fxm_play_channel(&channels[1]);
  fxm_play_channel(&channels[2]);

  z80_write_ay_reg(7, (channels[2].mixer << 2) | (channels[1].mixer << 1) | channels[0].mixer);
  for (int i = 13 ; i >= 0 ; --i)
    send_data(i, ayregs[i]);
}

void loop()
{
  fxm_init();
  while (1)
  {
    fxm_loop();
    delay(20);
  }
}

